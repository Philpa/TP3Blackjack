sémaphore: signal


==================================================================================================================================


SEMAINE 2, COURS 2

Première opération à faire avec un disque neuf: Formater!
Plusieurs systèmes de fichier possible: FAT16, FAT32, NTFS
	NTFS est plus sécuritaire que les FATs
	FAT32 ou NTFS a plus de "morceaux" que FAT16
		"Morceaux" = clusters, ou granules
		Plus petite unité d'allocation physique

Un bloc d'enregistrement physique contient 1@n enregistrements logiques
Facteur de blocage: Nb d'enregistrements logiques à l'intérieur d'un enregistrement physique
Physique: "classeur" | Logique: "Dossier"

Système de gestion de fichiers (SGF):
	Établit la correspondance entre les infos logiques et physiques d'un fichier
		-Organisation physique devient transparente pour l'utilisateur
		-Garantie l'intégrité des fichiers
		-Permet le partage des fichiers
	Infos logiques: Infos fournis via le programme.
	Infos physiques: physiquement sur le support.

Organisation des disques:
	Types de fichiers:
		-Données
		-Programmes: tentera de l'éxécuter
		-Commandes: de système d'exploitation
		-Catalogue: Répertoire

Organisations des fichiers:
	-Séquentielle: lu un après l'autre, comme les lignes d'un texte. L'accès est dépendant de l'organisation.
	-Relative: on peut la retrouver par rapport au début du fichier, Accès direct au fichier possible.
	-Séquence indexée: fonctionne avec une clé alphanumérique. Accès direct au fichier possible.

----------------------------------------------------------------------------------------------------------------------------------

SEMAINE 3, COURS 1

Gestionnaire d'entrée/sortie: s'occupe du transfert d'information entre l'utilisateur et le système
	Objectifs:
		-Contrôler l'échange physique de données
			-Par l'UCT (E/S programmée)
			-Par un dispositif particulier avec DMA
		-Prise en charge d'une demande d'E/S: demande effectuée par une tâche
		-Gestion de la simultanéité: Lorsque l'UCT n'a pas la charge de l'E/S, un programme peut se dérouler parallèlement.

E/S programmée:
	-L'information est découpée selon le mot-mémoire
	-Synchronisation d'une E/S programmée:
		-Scrutation du mot d'état: vérifie l'était du périphérique
		-Interruption: Le contrôleur du périphérique génère une interruption

Ressources internes/externes: mémoire, CPU, .../entrée-sortie
	À chaque fois qu'on fait référence aux ressources externes, on appelle le gestionnaire d'entrée/sortie (GES).

Pilote: programme qui effectue les opérations élémentaires de transfert
	-A à sa charge:
		-Initialisation du transfert: peut être confirmé par scrutation ou interruption
		-Gestion des cas erreurs
		-Gestion des interruptions émises par le périphérique

----------------------------------------------------------------------------------------------------------------------------------

SEMAINE 3, COURS 2
ÉLÉMENTS POUR MINDMAPS

SGF
(établir correspondance entre infos logiques/physiques)
	-Transparence
	-Intégrité des fichiers
	-Partage

GES
(transfert)

FAT
NTFS

Emplacement fichiers

Organisation

Accès

Transfert
	-UCT
	-DMA/AMD

Pilote (driver)

Interruption
Scrutation

Cluster - Enregistrements logiques - Enregistrements physiques

Buffer
(favorise la simultanéité)

----------------------------------------------------------------------------------------------------------------------------------

SEMAINE 6, COURS 1
GESTION DES TÂCHES

1.Les composantes du système
	-Interprète de commandes
	-Ensemble des requêtes (les primitives)
	-Programme de gestion des interruptions
	-Tables du système
	+Superviseur (Décide, prépare une queue d'exploitation, préparer l'ordre des priorités)
	+Répartiteur (Exécute, sauvegarde le contexte de tâche)


2 Tâches et processus:

2.1 définitions
	-Tâche:
	suite d'instructions en mémoire constituant un ensemble logique en cours d'exécution ou susceptible de s'exécuter.
	-Processus:
	occurence de programme en cours d'exécution ou attendant son exécution.
	-Tâche vit et meurt:
	engendrée par commande (de système d'exploitation), programme, sous-programme, programme de gestion des interruptions.
	-Un programme >>>>> plusieurs tâches!

2.2 états d'une table
	Montre les différentes états d'une tâche, et comment passer de l'un à l'autre.
états d'une tâche	
	En exécution: Dispose du CPU, ses instructions qui s'exéctutent
	Interrompue: Programme plus prioritaire qui s'exécute
	Prête: Candidate, mais une autre tâche s'exécute
	Bloquée: Attend un évènement
	Inactive: N'a pas encore débutée, ou a terminée
	**l'état est géré par le superviseur

2.3 représentation d'une tâche
	-Table des tâches
		-date
		-heure
		-version syst. d'exploit.
		-structure de tâches
	V
	-Tâche 1
		-état
		-contexte (ressources utilisées, etc)
	V
	-Tâche 2
		-état
		-contexte
	V
	-...

2.4 notions de priorité
	Superviseur attribue la priorité
		-ressources requises
		-période écoulée
		-importance de l'utilisateur
	Répartiteur sélectionne tâche éligible
notion de priorité (queue)
	-Queue d'exploitation: ordre des tâches
		Table des tâches
			-date
			-heure
			-version du syst. d'exploit.
			-structure de tâches
			-queue d'exploitation
			-tâche en exécution
		Tâche
			-État
			-contexte

2.5 relations entre les tâches
	-Indépendante
		-les résultats ou données de l'autre ne sont pas requis.
		-les ressources sont locales.
	-Parallèles
		-elles partagent la même ressource.
	-Concurrentes
		-elles sont mutuellement exclusive: utilisent une même ressource non partageable.
	-Coopérantes
		-a besoin du résultat d'une autre pour continuer.

2.6 synchronisation des tâches
	-Utilisation des sémpahores:
		-variable entière initialisée au nombre de tâches qui peuvent accéder simultanément à une ressource;
		-requêtes:
			-P(s) Wait
			-V(S) Signal
			S = variable sémaphore
	Exemples:
		-Tâches concurrentes: S(M), M initialisée à 1
		-Tâches coopérantes: S(C), C initialisée à 0

Comment régler un deadlock? Par l'arrêt des processus.

---------------------------------------------------------------------------------------------------------------------

SEMAINE 6, COURS 2

5. Gestion de la mémoire centrale

-Objectifs:
	-Allocation d'emplacements en mémoire centrale à une tâche.
	-Chargement et tranformation (translation) des adresses.
	-Protection des informations.
	-Partage des informations.

5.1 Allocation de la mémoire centrale
	-En zone unique: toute la mémoire à un programme.
	-En partitions statiques: plusieurs programmes, espace fixe.
	-En partitions dynamiques: plusieurs programmes, espace variable.
	-La pagination (mémoire virtuelle): programme découpé en unités de taille égale.
	-La segmentation: découpé en unités variables.
	-Le recouvrement: seuls les segments requis sont chargés.
	-Le va-et-vient: tâche est chargée en mémoire à l'activation.

Allocation de la mémoire en zone unique
Allocation de la mémoire en partitions fixes:
	Espace fixe, donc c'est facile à implémenter et facile d'utilisation.
	PAR CONTRE, on peut avoir de l'espace non-utilisé ou dépasser si partition pas assez gros.
Allocation de la mémoire en partitions dynamiques:
	On détermine la taille des partitions.
Allocation de la mémoire par pagination:
Mots clés:
	-Mémoire virtuelle;
	-Espace virtuel;
	-Espace réel;
	-Pages;
	-cadre des pages;
	-Mémoire topographique;
	-Défaut de page.
Allocation de la mémoire par segmentation:
	Chargement partie par partie.

5.2 Problèmes de translation d'adresses
	-Translation des addresses effectuées
	....

-------------------------------------------------------------------------------------------------------------------

RÉVISION EXAMEN 2

Systèmes complexes

1. Composantes du systèmes
	-Interprète de commande
	-Ensemble de requêtes(primitives)
	-Programme de gestion des interruptions
	-Table des systèmes
	+Superviseur (Cerveau)
	+Répartiteur (Bras)


2.1 Tâches et processus: définitions
	-Tâche:
	Suite d'instructions en mémoire constituant un ensemble logique en cours ou susceptible de s'exécuter.
	-Processus:
	occurence de programme en cours d'exécution ou attendant son exécution
	-Cycle de vie(tâche vie et meurt):
	engendrée par commande, programme, sous-programme, programme de gestion des interruptions.
	-Un programme >>>> plusieurs tâches!

2.2 Taches et processus: états d'une tâche
	États possibles: Inactive, en exécution, prête ou éligible, bloquée, interrompue. (voir graphique des liens)

	Si gest. de tâche met une tâche en exécution, sauvegarde celui de la tâche prédécemment en cours, il change le contexte de la tâche, et commence l'exécution de l'actuelle.
	Le chargeur est mis en opération par le prog, sous-prog...
	Lorsque inactive, la tâche est emmmenée dans la table des tâches: 1ère structure, celle qui contient tt les tâches
	Activation par le superviseur se fait lorsque ress. dispo, etc etc, donc lorsque les ressources sont dispo.
	Bloqué -> terminé: par un kill, il manque qqch, timeout

2.4 Tâches et processus: notions de priorité (queue)
	-Queue d'exploitation
	...

2.4 Tâches et processus: notions de priorité
	Superviseur attrivue la priorité
		-ressources requises
		-période écoulée
		-importance de l'utilisateur
	Répartiteur sélectionne tâche élligible À PARTIR de la struct. de tâche

2.5 Tâches et processus: relations entre les tâches
	...

2.6 Tâches et processus: synchronisation des tâches
	-Utilisation des sépmaphores:
		-variable entière initialisée au nombre de tâches qui peuvent accéder simultanément à une ressource:
		 Permet de savoir l'état des ressources
		-requêtes:
			-P(S) Wait --- Puis-je utiliser une ressource?
			-V(S) Signal --- Vas-y!
			Où S est la variable sémaphore
	-Exemples:
		-pour des tâches concurrentes:
			-S(M) M initialisée à 1
			-section critique (qu'est-ce que la section critique?)
		-pour des tâches coopérantes
			-S(C) C initialisée à 0

	-Utilisation de tubes(pipes)
	 Sert à la synchronisation des tâches
	...

	Interblocage ou étreinte mortelle! (deadlock)
	Une tâche attend après une autre.
	Réglable avec kill, peut être prévenu avec moniteur de transaction.


3. Modes de multiprog.
	-Sans interrup.
	La tâche est interrompue seulement lors de requête externe
	-Avec interrup.
	La tâches est interrompue lors de requête externe ou quand une tâche plus prioritaire est suscep. de s'exécuter
	-En temps partagé
	Chaque tâche a une tranche de temps, interrom, lorsque temps écoulé ou si requête externe.


4.Gestion de l'unité centrale
	...



5.Gestion de la mémoire centrale
Objectifs:
	...


5.1 Allocation de la mémoire centrale
	-En zone unique
	-En partitions stats
	-En partitions dyna
	-La pagination (mémoire virtuelle) *** IMPORTANTE ***
	-La segmentation
	-Le recouvrement
	-Le va-et-vient, peu intéressant

5.1 Allocation de la mémoire en zone unique
	...

5.1 Allocation de la mémoire en partitions fixes

5.1 Allocation de la mémoire en partitions dyna.
	...
	Comment faire pour améliorer les performances? Fragmentation.

5.1 Allocation de la mémoire par pagination¸
	...
	Erreur de pagination: ce qu'on veut charger n'est pas en mémoire.

5.1 Mémoire topographique
	...

5.1 Gestion des pages
	-Informations dispos:
	...
	-L'unité de gestions de la mémoire (MMU)

5.1 Allocation de la mémoire par segmentation

5.2 Problèmes de translation d'adresses
	Translation d'adresses: un mécanisme de traduction qui assure la conversion des adresses virtuelles en physiques en consultant table des pages.
	Translation des adresses effectuée:
		-à l'édition des liens;
		Tâche a adresse relative
		-au chargement;
		Tâche a maintenant adresse réelle
		-à l'exécution.


6. Protection des informations
	-Protection des infos en mémoire:
		-utilisation des registres limites (utilisés par hackers)
		-clés et verrous de protect.;
		-cas de mém. paginées.
	-Protection du fonctionnement du système:
		-mode superviseur
		-mode utilisateur

------------------------------------------------------------------------------------------------------------------------------------------------------


